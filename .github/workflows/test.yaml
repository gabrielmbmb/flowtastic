name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-root
      - name: Install Poetry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Configure Poetry
        run: |
          python -m poetry config virtualenvs.create false
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install --extras "orjson"
      - name: Lint
        run: python -m poetry run bash scripts/lint.sh
      - name: Test
        run: python -m poetry run bash scripts/test.sh

      